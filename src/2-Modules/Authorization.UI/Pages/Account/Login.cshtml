@page "/login"
@using CodeBlock.DevKit.Web.Blazor.Server.Authentication
@model CodeBlock.DevKit.Authorization.UI.Pages.Account.LoginModel
@inject AuthenticationSettings AuthenticationSettings

@{
    Layout = "_Layout";
    ViewData["Title"] = @AuthorizationUiLocalizer[AuthorizationUiResource.Login_Page_Title];
    string returnUrl = Request.Query["returnUrl"].ToString();
    string returnUrlQuery = string.IsNullOrEmpty(returnUrl) ? "" : $"?returnUrl={returnUrl}";
}

<div class="card bg-form text-white-50 shadow mb-5 min-height-20rem width-xs-90 width-sm-40 width-md-40">
    <div class="card-header h2 p-3">@AuthorizationUiLocalizer[AuthorizationUiResource.Login_Page_Form_Title]</div>
    <div class="card-body p-3">
        <form method="post">

            <partial name="_ServerValidationSummary" />

            @Html.AntiForgeryToken()

            <div class="form-group p-2">
                <input asp-for="VerifyUserPasswordRequest.Email" class="form-control" placeholder="@AuthorizationLocalizer[AuthorizationResource.User_Email]" />
                <span asp-validation-for="VerifyUserPasswordRequest.Email" class="text-danger"></span>
            </div>
            <div class="form-group p-2">
                <input asp-for="VerifyUserPasswordRequest.Password" class="form-control" placeholder="@AuthorizationLocalizer[AuthorizationResource.User_Password]" />
                <span asp-validation-for="VerifyUserPasswordRequest.Password" class="text-danger"></span>
            </div>
            <div class="form-group p-2">
                <button id="loginBtn" type="submit" class="btn btn-success">@AuthorizationUiLocalizer[AuthorizationUiResource.Login_Page_Submit_Btn]</button>
                <a class="btn btn-outline-primary" href="/register@(returnUrlQuery)">@AuthorizationUiLocalizer[AuthorizationUiResource.Login_Page_Register_Btn]</a>
            </div>
        </form>

        <div class="form-group p-2">

            @if (AuthenticationSettings.Google.Enabled)
            {
                <a href="/externalLoginChallenge/google/@(returnUrlQuery)" class="btn btn-outline-danger">
                    <i class="bi bi-google"></i> Google
                </a>
            }

            @if (AuthenticationSettings.Twitter.Enabled)
            {
                <a href="/externalLoginChallenge/twitter/@(returnUrlQuery)" class="btn btn-outline-primary">
                    <i class="bi bi-twitter"></i> Twitter
                </a>
            }

            @if (AuthenticationSettings.Microsoft.Enabled)
            {
                <a href="/externalLoginChallenge/microsoft/@(returnUrlQuery)" class="btn btn-outline-dark">
                    <i class="bi bi-microsoft"></i> Microsoft
                </a>
            }

            @if (AuthenticationSettings.Facebook.Enabled)
            {
                <a href="/externalLoginChallenge/facebook/@(returnUrlQuery)" class="btn btn-outline-info">
                    <i class="bi bi-facebook"></i> Facebook
                </a>
            }
        </div>

    </div>
</div>
